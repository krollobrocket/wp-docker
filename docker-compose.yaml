version: '3.8'
services:
  nginx:
    image: nginx
    volumes:
      - ./services/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80
    depends_on:
      - apache
  apache:
    image: httpd:2.4.57-alpine3.18
    hostname: apache
    volumes:
      - ./data:/usr/local/apache2/htdocs/
      - ./services/apache/conf/php.conf:/usr/local/apache2/conf/extra/php.conf
      - ./services/apache/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf
    ports:
      - 80:80
    depends_on:
      - php
      - db
  php:
    build:
      context: .
      dockerfile: php.docker
      args:
        PHP_VERSION: ${PHP_VERSION}
    volumes:
      - ./data:/usr/local/apache2/htdocs/
      - ./services/php/php.ini:/usr/local/etc/php/php.ini
  redis:
    image: redis:7.2.0-alpine3.18
    command: redis-server --appendonly yes
    volumes:
      - ./services/redis:/data
  postgres:
    image: postgres:alpine3.18
    entrypoint: ["echo", "postgres is disabled"]
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - ./services/postgresql:/var/lib/postgresql
  db:
    image: yobasystems/alpine-mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./services/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
